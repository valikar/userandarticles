1.Для початку запустимо maven додаток.
2. Щоб додати в початкову БД заготовлених Юзерів і Артікли, виконаємо наступний запит методом GET:
http://localhost:8080/api
У відповідь нам прийде надпис.
3. Шоб переглянути всіх Юзерів иконаємо наступний запит методом GET:
http://localhost:8080/api/users
4.Шоб переглянути всі Артіклес виконаємо наступний запит методом GET:
http://localhost:8080/api/articles
5. Щоб дістати всіх Users, в яких age більше за якесь значення виконаємо наступний запит методом POST:
http://localhost:8080/api/user/age 
Тіло запиту має виглядати так: {"age":"15"} - де замість 15 ставимо той age, значення більші якого хочемо отримати.
6. Для того щоб дістати всіх Users з Articles, в яких color якесь певне значення з enum-а виконаємо наступний запит методом POST:
http://localhost:8080/api/user/article/color
Тіло запиту має виглядати так: {"color":"BLUE"} де замість BLUE ставимо той колір з enum(BLACK,WHITE,GREEN,BROWN,BLUE,YELLOW,SNOW,GRAY,DARK),який хочемо 
7. Для того щоб  дістати унікальні name з Users, в яких більше ніж 3 Articles виконаємо наступний запит методом POST:
http://localhost:8080/api/user/countarticle/overthree
В тіло запиту можна нічого не вписувати
8.Для того щоб зберегти User виконаємо наступний запит методом POST:
http://localhost:8080/api/user
Тіло запиту має виглядати так: 
{
	"name":"Vasia",
"age":"15"
}, де замість Vasia вказуємо бажане ім'я, а замість 15 бажаний вік.
9.Для того щоб зберегти Article виконаємо наступний запит методом POST:
http://localhost:8080/api/user/{id}/article , де на місці {id} вказуємо id користувача, для якого хочемо створити Article
Тіло запиту має виглядати так: 
{
	"text":"Hello name",
"color":"BLUE"
}, де замість Hello name вказуємо бажаний текст, а замість BLUE бажаний колір з ENUM(BLACK,WHITE,GREEN,BROWN,BLUE,YELLOW,SNOW,GRAY,DARK).
Також я реалізував запити для перегляду окремо кожного Юзера,Артікл, а також їх видалення. Якщо необхідно буде ще якісь інструкції прошу 
писати в скайп або на електронну пошту.
У основній папці проекту міститься файл forPackman, де збережена колекція для тестування API  у Packman. 
